#include <iostream> 
#include <string> 

using namespace std; 

void selectionSort(string* arr, int n) // объявление функции сортировки выбором, которая принимает массив строк и его размер
{
    for (int i = 0; i < n - 1; i++) // цикл для прохода по всем элементам массива
    {
        int min_idx = i; // объявление переменной для хранения индекса минимального элемента, начальное значение - текущий индекс
        for (int j = i + 1; j < n; j++) // цикл для поиска минимального элемента среди оставшихся
        {
            if (arr[j].length() < arr[min_idx].length()) // если длина текущего элемента меньше длины минимального
            {
                min_idx = j; // обновляем значение индекса минимального элемента
            }
        }
        if (min_idx != i) // если найденный минимальный элемент не совпадает с текущим
        {
            string temp = arr[i]; // сохраняем текущий элемент во временную переменную
            arr[i] = arr[min_idx]; // ставим на его место минимальный элемент
            arr[min_idx] = temp; // на место минимального элемента ставим временную переменную
        }
    }
}

int main() 
{
    setlocale(LC_ALL, "Russian"); // установка локали для корректного отображения русских символов в консоли
    int n; // объявление переменной для хранения размера массива
    cout << "Введите количество строк: "; // вывод сообщения в консоль
    cin >> n; // ввод размера массива с консоли

    string* arr = new string[n]; // выделение памяти под массив строк

    for (int i = 0; i < n; i++) // цикл для заполнения массива строк
    {
        cin >> arr[i]; // ввод строки с консоли и сохранение ее в массиве
    }

    selectionSort(arr, n); // вызов функции сортировки выбором для отсортировки массива

    cout << "Отсортированный массив строк по длине: " << endl; // вывод сообщения в консоль
    for (int i = 0; i < n; i++) // цикл для вывода отсортированного массива строк в консоль
    {
        cout << arr[i] << endl; // вывод строки из массива на новой строке
    }

    delete[] arr; // освобождение памяти, занятой под массив строк

}
